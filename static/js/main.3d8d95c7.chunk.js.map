{"version":3,"sources":["utils/InitFontAwesome.js","constants/Url.js","assets/images/main-banner.jpg","components/Landing/MainSlider.js","components/Landing/AboutMe.js","components/Landing/Advice.js","constants/Jobs.js","constants/CategoriesList.js","utils/JobCategory.js","components/JobCategory/JobCategory.js","components/JobCategory/CategoriesList.js","components/Job/JobCard.js","components/Job/JobList.js","components/Landing/Searches.js","components/Landing/index.js","components/Landing/Landing.js","assets/images/logo.jpg","components/Logo/index.js","components/Logo/Logo.js","components/Header/MobileNav.js","components/Header/index.js","components/Header/Header.js","constants/Contact.js","components/Footer/index.js","components/Footer/Footer.js","constants/SocialNetwork.js","utils/QueryParams.js","components/Searches/index.js","components/Searches/Searches.js","components/Job/JobDetail.js","components/Main/ScrollToTop.js","components/Main/index.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["initFontAwesome","library","add","fab","faLinkedinIn","faFacebookF","faInstagram","faTwitter","faAddressCard","faBars","faCheck","faDatabase","faLaptopCode","faMapMarkerAlt","faUser","faUserCircle","faSignInAlt","faSignOutAlt","faStar","faTimes","faPlus","faLock","faLockOpen","faMobileAlt","faArrowLeft","faArrowRight","faCheckCircle","faTimesCircle","faClock","faGlobeAmericas","faSearchDollar","faSpellCheck","faTrashAlt","faEllipsisV","faUserTie","farEnvelope","farStar","farEye","farLightbulb","APP_URL_HOME","APP_URL_JOBS","APP_URL_JOB_DETAIL","MainSlider","className","style","backgroundImage","MainSlide","AboutMe","id","Advice","name","description","exclusive_requirements","desirable_requirements","benefits","experience","kindPosition","location","featured","category","mode","contract","consultant","list","amount","icon","iconByCategory","categoryName","CATEGORIES","find","iconName","JobCategory","plural","to","memo","CategoriesList","map","JOBS","filter","job","length","JobCard","JobList","jobs","title","withViewAll","defaultProps","featuredJobs","Searches","Landing","Logo","src","LOGO","alt","MobileNav","useState","showMenu","setShowMenu","type","onClick","Header","ROUTES","href","EMAIL","RECRUITER_EMAIL","Footer","CONTACT","target","rel","parseQueryParams","params","URLSearchParams","getParam","get","useLocation","search","filteredJobs","toLowerCase","JobDetail","req","benefit","withRouter","history","useEffect","unlisten","listen","window","scrollTo","Main","path","App","basename","Boolean","hostname","match","StApp","styled","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kPA8FeA,MA5Cf,WACEC,IAAQC,IAENC,IACAC,IACAC,IACAC,IACAC,IAEAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IAEAC,IACAC,IACAC,IACAC,MC1FSC,EAAe,IACfC,EAAe,aACfC,EAAqB,YCFnB,MAA0B,wCCI1B,SAASC,IACtB,OACE,qBAAKC,UAAU,cAAf,SACE,sBACEA,UAAU,qBACVC,MAAO,CAAEC,gBAAgB,OAAD,OAASC,EAAT,MAF1B,UAIE,qBAAKH,UAAU,sBACf,sBAAKA,UAAU,8BAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,sBAAMA,UAAU,oBAAhB,6BAEF,qBAAKA,UAAU,gCAAf,SACE,sBAAMA,UAAU,oBAAhB,mDCfG,SAASI,IACtB,OACE,qBAAKJ,UAAU,WAAWK,GAAG,mBAA7B,SACE,sBAAKL,UAAU,oBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,kBAAd,sBACA,mBAAGA,UAAU,wBAAb,63BAIF,qBAAKA,UAAU,yBCVR,SAASM,IACtB,OACE,qBAAKN,UAAU,SAASK,GAAG,wBAA3B,SACE,sBAAKL,UAAU,kBAAf,UACE,qBAAKA,UAAU,kBAEf,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,gBAAd,4BACA,mBAAGA,UAAU,sBAAb,k4BCVK,OACb,CACEK,GAAI,OACJE,KAAM,0BACNC,YAAa,2OACbC,uBAAwB,CACtB,6FACA,6DACA,uBACA,kDACA,wEACA,+CACA,iDAEFC,uBAAwB,CACtB,6CACA,yCACA,+CACA,yDACA,+BACA,4CACA,iCACA,8CACA,sCACA,oCACA,oDAEFC,SAAU,CACR,kBACA,iCACA,UACA,cACA,uBACA,uBACA,uBACA,qBACA,wDACA,wBACA,uEACA,yCACA,8BACA,uBACA,wBAEFC,WAAY,6BACZC,aAAc,YACdC,SAAU,yBACVC,UAAU,EACVC,SAAU,KACVC,KAAM,iBACNC,SAAU,6BACVC,WAAY,UAEd,CACEd,GAAI,GACJE,KAAM,0BACNC,YAAa,2OACbC,uBAAwB,CACtB,6FACA,6DACA,uBACA,kDACA,wEACA,+CACA,iDAEFC,uBAAwB,CACtB,6CACA,yCACA,+CACA,yDACA,+BACA,4CACA,iCACA,8CACA,sCACA,oCACA,oDAEFC,SAAU,CACR,kBACA,iCACA,UACA,cACA,uBACA,uBACA,uBACA,qBACA,wDACA,wBACA,uEACA,yCACA,8BACA,uBACA,wBAEFC,WAAY,6BACZC,aAAc,YACdC,SAAU,yBACVC,UAAU,EACVC,SAAU,KACVC,KAAM,SACNC,SAAU,YACVC,WAAY,UAEd,CACEd,GAAI,GACJE,KAAM,0BACNC,YAAa,2OACbC,uBAAwB,CACtB,6FACA,6DACA,uBACA,kDACA,wEACA,+CACA,iDAEFC,uBAAwB,CACtB,6CACA,yCACA,+CACA,yDACA,+BACA,4CACA,iCACA,8CACA,sCACA,oCACA,oDAEFC,SAAU,CACR,kBACA,iCACA,UACA,cACA,uBACA,uBACA,uBACA,qBACA,wDACA,wBACA,uEACA,yCACA,8BACA,uBACA,wBAEFC,WAAY,6BACZC,aAAc,YACdC,SAAU,yBACVC,UAAU,EACVC,SAAU,KACVC,KAAM,SACNC,SAAU,YACVC,WAAY,UAEd,CACEd,GAAI,GACJE,KAAM,0BACNC,YAAa,2OACbC,uBAAwB,CACtB,6FACA,6DACA,uBACA,kDACA,wEACA,+CACA,iDAEFC,uBAAwB,CACtB,6CACA,yCACA,+CACA,yDACA,+BACA,4CACA,iCACA,8CACA,sCACA,oCACA,oDAEFC,SAAU,CACR,kBACA,iCACA,UACA,cACA,uBACA,uBACA,uBACA,qBACA,wDACA,wBACA,uEACA,yCACA,8BACA,uBACA,wBAEFC,WAAY,6BACZC,aAAc,YACdC,SAAU,yBACVC,UAAU,EACVC,SAAU,KACVC,KAAM,UACNC,SAAU,YACVC,WAAY,WC/MHC,EAAO,CAClB,CACEC,OAAQ,EACRC,KAAM,eACNf,KAAM,aAER,CACEc,OAAQ,EACRC,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","file":"static/js/main.3d8d95c7.chunk.js","sourcesContent":["import { library } from '@fortawesome/fontawesome-svg-core'\n\n// Brand icons: fab\nimport {\n  fab,\n  faLinkedinIn,\n  faFacebookF,\n  faInstagram,\n  faTwitter,\n} from '@fortawesome/free-brands-svg-icons'\n\n// Solid icons: fas\nimport {\n  faAddressCard,\n  faBars,\n  faCheck,\n  faDatabase,\n  faLaptopCode,\n  faMapMarkerAlt,\n  faMobileAlt,\n  faUser,\n  faUserCircle,\n  faSignInAlt,\n  faSignOutAlt,\n  faSpellCheck,\n  faStar,\n  faTimes,\n  faPlus,\n  faLock,\n  faLockOpen,\n  faArrowLeft,\n  faArrowRight,\n  faCheckCircle,\n  faTimesCircle,\n  faClock,\n  faGlobeAmericas,\n  faSearchDollar,\n  faTrashAlt,\n  faEllipsisV,\n  faUserTie,\n} from '@fortawesome/free-solid-svg-icons'\n\n// Regular icons: far\nimport {\n  faEnvelope as farEnvelope,\n  faStar as farStar,\n  faEye as farEye,\n  faLightbulb as farLightbulb,\n} from '@fortawesome/free-regular-svg-icons'\n\nfunction initFontAwesome() {\n  library.add(\n    // fab\n    fab,\n    faLinkedinIn,\n    faFacebookF,\n    faInstagram,\n    faTwitter,\n    // fas\n    faAddressCard,\n    faBars,\n    faCheck,\n    faDatabase,\n    faLaptopCode,\n    faMapMarkerAlt,\n    faUser,\n    faUserCircle,\n    faSignInAlt,\n    faSignOutAlt,\n    faStar,\n    faTimes,\n    faPlus,\n    faLock,\n    faLockOpen,\n    faMobileAlt,\n    faArrowLeft,\n    faArrowRight,\n    faCheckCircle,\n    faTimesCircle,\n    faClock,\n    faGlobeAmericas,\n    faSearchDollar,\n    faSpellCheck,\n    faTrashAlt,\n    faEllipsisV,\n    faUserTie,\n    // far\n    farEnvelope,\n    farStar,\n    farEye,\n    farLightbulb,\n  )\n}\n\nexport default initFontAwesome\n","export const APP_URL_HOME = '/'\nexport const APP_URL_JOBS = '/busquedas'\nexport const APP_URL_JOB_DETAIL = '/posicion'\n","export default __webpack_public_path__ + \"static/media/main-banner.ee1f640c.jpg\";","import React from 'react'\n\nimport MainSlide from 'assets/images/main-banner.jpg'\n\nexport default function MainSlider() {\n  return (\n    <div className=\"main-slider\">\n      <div\n        className=\"main-slider__cover\"\n        style={{ backgroundImage: `url(${MainSlide})` }}\n      >\n        <div className=\"main-slider__mask\" />\n        <div className=\"main-slider__text-container\">\n          <div className=\"main-slider__title\">\n            <span className=\"main-slider__text\">Iocco Martina</span>\n          </div>\n          <div className=\"main-slider__subtitle only-md\">\n            <span className=\"main-slider__text\">Licenciada en Psicología</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function AboutMe() {\n  return (\n    <div className=\"about-me\" id=\"section-sobre-mi\">\n      <div className=\"about-me__wrapper\">\n        <div className=\"about-me__text\">\n          <h4 className=\"about-me__title\">Sobre mi</h4>\n          <p className=\"about-me__description\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam pharetra sem at magna efficitur, non vestibulum purus euismod. Nulla nisl quam, ornare ut porta quis, ornare a quam. Aliquam facilisis vel massa id fringilla. Phasellus id metus egestas, vestibulum felis dapibus, fringilla libero. Cras velit erat, posuere vitae purus vel, vulputate euismod odio. Aliquam erat volutpat. Donec sit amet massa id ex sodales cursus ac id nulla. Morbi laoreet feugiat lacus, volutpat consectetur ex convallis ac. Nunc varius ante in ante aliquam, at consequat urna hendrerit. Fusce ac facilisis massa. Curabitur rhoncus, libero sit amet ullamcorper maximus, ipsum turpis vehicula mauris, ut pellentesque nisi turpis et ipsum. Nullam vitae convallis leo, vitae tempus nisi. Donec nec nulla dictum massa dictum auctor. Nullam facilisis sodales mauris, ut efficitur augue tincidunt sed.\n          </p>\n        </div>\n        <div className=\"about-me__image\">\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Advice() {\n  return (\n    <div className=\"advice\" id=\"section-asesoramiento\">\n      <div className=\"advice__wrapper\">\n        <div className=\"advice__image\">\n        </div>\n        <div className=\"advice__text\">\n          <h4 className=\"advice__title\">Asesoramientos</h4>\n          <p className=\"advice__description\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam pharetra sem at magna efficitur, non vestibulum purus euismod. Nulla nisl quam, ornare ut porta quis, ornare a quam. Aliquam facilisis vel massa id fringilla. Phasellus id metus egestas, vestibulum felis dapibus, fringilla libero. Cras velit erat, posuere vitae purus vel, vulputate euismod odio. Aliquam erat volutpat. Donec sit amet massa id ex sodales cursus ac id nulla. Morbi laoreet feugiat lacus, volutpat consectetur ex convallis ac. Nunc varius ante in ante aliquam, at consequat urna hendrerit. Fusce ac facilisis massa. Curabitur rhoncus, libero sit amet ullamcorper maximus, ipsum turpis vehicula mauris, ut pellentesque nisi turpis et ipsum. Nullam vitae convallis leo, vitae tempus nisi. Donec nec nulla dictum massa dictum auctor. Nullam facilisis sodales mauris, ut efficitur augue tincidunt sed.\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export default [\n  {\n    id: \"1000\",\n    name: \"Tester SSr (Caja negra)\",\n    description: \"La empresa desarrolla inteligencia artificial orientada a los negocios financieros. Es un excelente lugar donde crecer mientras te capacitas en las últimas tecnologías. Gran ambiente de trabajo, colaborativo y sin competencia.\",\n    exclusive_requirements: [\n      \"Contar con 3 años como mínimo de experiencia laboral previa en posiciones similares.\",\n      \"Haber trabajado con tecnologías web al menos 2 años.\",\n      \"Conocimientos de SQL\",\n      \"Experiencia en testing funcional de caja negra.\",\n      \"Experiencia en reporte de defectos y ejecución de casos de prueba.\",\n      \"Experiencia en diseño de casos de prueba.\",\n      \"Experiencia en análisis de requerimientos.\",\n    ],\n    desirable_requirements: [\n      \"Haber trabajado en ambientes dinámicos.\",\n      \"Experiencia en testing de caja blanca.\",\n      \"Experiencia en automatización de pruebas.\",\n      \"Experiencia en pruebas de rendimientos y concurrencia.\",\n      \"Experiencia en web services.\",\n      \"Experiencia en metodologías ágiles.\",\n      \"Experiencia en procesos batch.\",\n      \"Experiencias en aplicaciones de escritorio.\",\n      \"Conocimientos del negocio bancario.\",\n      \"Experiencia de stored procedures.\",\n      \"Haber utilizado herramientas de Test Management.\",\n    ],\n    benefits: [\n      \"Plan de carrera\",\n      \"Clases de inglés in company\",\n      \"OSDE210\",\n      \"Home Office\",\n      \"Trabajo colaborativo\",\n      \"Vacaciones flexibles\",\n      \"Eventos corporativos\",\n      \"Horarios flexibles\",\n      \"Membresía a centro deportivo a cargo de la empresa\",\n      \"Programa de referidos\",\n      \"Ajustes salariales cada 6 meses según inflación y desempeño\",\n      \"Descuentos en Educación IT y el CUI\",\n      \"Dia libre por cumpleaños\",\n      \"Espacios recreativos\",\n      \"Convenios con marcas\",\n    ],\n    experience: \"3-5 años de experiencia\",\n    kindPosition: \"Full Time\",\n    location: \"Congreso, Buenos Aires\",\n    featured: false,\n    category: \"QA\",\n    mode: \"Remoto/On Site\",\n    contract: \"Relación de dependencia\",\n    consultant: \"BudaIT\"\n  },\n  {\n    id: \"\",\n    name: \"Tester SSr (Caja negra)\",\n    description: \"La empresa desarrolla inteligencia artificial orientada a los negocios financieros. Es un excelente lugar donde crecer mientras te capacitas en las últimas tecnologías. Gran ambiente de trabajo, colaborativo y sin competencia.\",\n    exclusive_requirements: [\n      \"Contar con 3 años como mínimo de experiencia laboral previa en posiciones similares.\",\n      \"Haber trabajado con tecnologías web al menos 2 años.\",\n      \"Conocimientos de SQL\",\n      \"Experiencia en testing funcional de caja negra.\",\n      \"Experiencia en reporte de defectos y ejecución de casos de prueba.\",\n      \"Experiencia en diseño de casos de prueba.\",\n      \"Experiencia en análisis de requerimientos.\",\n    ],\n    desirable_requirements: [\n      \"Haber trabajado en ambientes dinámicos.\",\n      \"Experiencia en testing de caja blanca.\",\n      \"Experiencia en automatización de pruebas.\",\n      \"Experiencia en pruebas de rendimientos y concurrencia.\",\n      \"Experiencia en web services.\",\n      \"Experiencia en metodologías ágiles.\",\n      \"Experiencia en procesos batch.\",\n      \"Experiencias en aplicaciones de escritorio.\",\n      \"Conocimientos del negocio bancario.\",\n      \"Experiencia de stored procedures.\",\n      \"Haber utilizado herramientas de Test Management.\",\n    ],\n    benefits: [\n      \"Plan de carrera\",\n      \"Clases de inglés in company\",\n      \"OSDE210\",\n      \"Home Office\",\n      \"Trabajo colaborativo\",\n      \"Vacaciones flexibles\",\n      \"Eventos corporativos\",\n      \"Horarios flexibles\",\n      \"Membresía a centro deportivo a cargo de la empresa\",\n      \"Programa de referidos\",\n      \"Ajustes salariales cada 6 meses según inflación y desempeño\",\n      \"Descuentos en Educación IT y el CUI\",\n      \"Dia libre por cumpleaños\",\n      \"Espacios recreativos\",\n      \"Convenios con marcas\",\n    ],\n    experience: \"3-5 años de experiencia\",\n    kindPosition: \"Full Time\",\n    location: \"Congreso, Buenos Aires\",\n    featured: true,\n    category: \"QA\",\n    mode: \"Remoto\",\n    contract: \"Freelance\",\n    consultant: \"BudaIT\"\n  },\n  {\n    id: \"\",\n    name: \"Tester SSr (Caja negra)\",\n    description: \"La empresa desarrolla inteligencia artificial orientada a los negocios financieros. Es un excelente lugar donde crecer mientras te capacitas en las últimas tecnologías. Gran ambiente de trabajo, colaborativo y sin competencia.\",\n    exclusive_requirements: [\n      \"Contar con 3 años como mínimo de experiencia laboral previa en posiciones similares.\",\n      \"Haber trabajado con tecnologías web al menos 2 años.\",\n      \"Conocimientos de SQL\",\n      \"Experiencia en testing funcional de caja negra.\",\n      \"Experiencia en reporte de defectos y ejecución de casos de prueba.\",\n      \"Experiencia en diseño de casos de prueba.\",\n      \"Experiencia en análisis de requerimientos.\",\n    ],\n    desirable_requirements: [\n      \"Haber trabajado en ambientes dinámicos.\",\n      \"Experiencia en testing de caja blanca.\",\n      \"Experiencia en automatización de pruebas.\",\n      \"Experiencia en pruebas de rendimientos y concurrencia.\",\n      \"Experiencia en web services.\",\n      \"Experiencia en metodologías ágiles.\",\n      \"Experiencia en procesos batch.\",\n      \"Experiencias en aplicaciones de escritorio.\",\n      \"Conocimientos del negocio bancario.\",\n      \"Experiencia de stored procedures.\",\n      \"Haber utilizado herramientas de Test Management.\",\n    ],\n    benefits: [\n      \"Plan de carrera\",\n      \"Clases de inglés in company\",\n      \"OSDE210\",\n      \"Home Office\",\n      \"Trabajo colaborativo\",\n      \"Vacaciones flexibles\",\n      \"Eventos corporativos\",\n      \"Horarios flexibles\",\n      \"Membresía a centro deportivo a cargo de la empresa\",\n      \"Programa de referidos\",\n      \"Ajustes salariales cada 6 meses según inflación y desempeño\",\n      \"Descuentos en Educación IT y el CUI\",\n      \"Dia libre por cumpleaños\",\n      \"Espacios recreativos\",\n      \"Convenios con marcas\",\n    ],\n    experience: \"3-5 años de experiencia\",\n    kindPosition: \"Full Time\",\n    location: \"Congreso, Buenos Aires\",\n    featured: false,\n    category: \"QA\",\n    mode: \"Remoto\",\n    contract: \"Freelance\",\n    consultant: \"BudaIT\"\n  },\n  {\n    id: \"\",\n    name: \"Tester SSr (Caja negra)\",\n    description: \"La empresa desarrolla inteligencia artificial orientada a los negocios financieros. Es un excelente lugar donde crecer mientras te capacitas en las últimas tecnologías. Gran ambiente de trabajo, colaborativo y sin competencia.\",\n    exclusive_requirements: [\n      \"Contar con 3 años como mínimo de experiencia laboral previa en posiciones similares.\",\n      \"Haber trabajado con tecnologías web al menos 2 años.\",\n      \"Conocimientos de SQL\",\n      \"Experiencia en testing funcional de caja negra.\",\n      \"Experiencia en reporte de defectos y ejecución de casos de prueba.\",\n      \"Experiencia en diseño de casos de prueba.\",\n      \"Experiencia en análisis de requerimientos.\",\n    ],\n    desirable_requirements: [\n      \"Haber trabajado en ambientes dinámicos.\",\n      \"Experiencia en testing de caja blanca.\",\n      \"Experiencia en automatización de pruebas.\",\n      \"Experiencia en pruebas de rendimientos y concurrencia.\",\n      \"Experiencia en web services.\",\n      \"Experiencia en metodologías ágiles.\",\n      \"Experiencia en procesos batch.\",\n      \"Experiencias en aplicaciones de escritorio.\",\n      \"Conocimientos del negocio bancario.\",\n      \"Experiencia de stored procedures.\",\n      \"Haber utilizado herramientas de Test Management.\",\n    ],\n    benefits: [\n      \"Plan de carrera\",\n      \"Clases de inglés in company\",\n      \"OSDE210\",\n      \"Home Office\",\n      \"Trabajo colaborativo\",\n      \"Vacaciones flexibles\",\n      \"Eventos corporativos\",\n      \"Horarios flexibles\",\n      \"Membresía a centro deportivo a cargo de la empresa\",\n      \"Programa de referidos\",\n      \"Ajustes salariales cada 6 meses según inflación y desempeño\",\n      \"Descuentos en Educación IT y el CUI\",\n      \"Dia libre por cumpleaños\",\n      \"Espacios recreativos\",\n      \"Convenios con marcas\",\n    ],\n    experience: \"3-5 años de experiencia\",\n    kindPosition: \"Full Time\",\n    location: \"Congreso, Buenos Aires\",\n    featured: true,\n    category: \"QA\",\n    mode: \"On site\",\n    contract: \"Freelance\",\n    consultant: \"BudaIT\"\n  }\n]\n","export const list = [\n  {\n    amount: 1,\n    icon: 'address-card',\n    name: 'Front-end'\n  },\n  {\n    amount: 1,\n    icon: 'database',\n    name: 'Back-end'\n  },\n  {\n    amount: 2,\n    icon: 'laptop-code',\n    name: 'Full-stack'\n  },\n  {\n    amount: 5,\n    icon: 'spell-check',\n    name: 'QA'\n  },\n  {\n    amount: 2,\n    icon: 'user-tie',\n    name: 'Project Manager'\n  },\n  {\n    amount: 1,\n    icon: 'mobile-alt',\n    name: 'Mobile'\n  },\n]","import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport { list as CATEGORIES } from 'constants/CategoriesList'\nimport JOBS from 'constants/Jobs'\n\nexport function jobIcon(iconName) {\n  return <FontAwesomeIcon icon={iconName} />\n}\n\nexport function iconByCategory(categoryName) {\n  const category = CATEGORIES.find((category) => category.name === categoryName)\n  const iconName = category ? category.icon : 'others'\n\n  return <FontAwesomeIcon icon={iconName} />\n}\n\nexport function amountOfJobs(categoryName) {\n  const amount = JOBS.filter((job) => job.category === categoryName).length\n\n  return amount\n}\n","import React, { memo } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { APP_URL_JOBS } from 'constants/Url'\n\nfunction JobCategory({ amount, icon, name}) {\n  const plural = amount === 0 || amount > 1 ? 's' : ''\n\n  return (\n    <Link\n      to={`${APP_URL_JOBS}?categoria=${name}`}\n      className=\"job-category\"\n    >\n      <span className=\"job-category__name\">{name}</span>\n      <FontAwesomeIcon icon={icon} />\n      <span className=\"job-category__amount\">\n        {`${amount} búsqueda${plural} abierta${plural}`}\n      </span>\n    </Link>\n  )\n}\n\nJobCategory.propTypes = {\n  amount: PropTypes.number.isRequired,\n  icon: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n}\n\nexport default memo(JobCategory)\n","import React from 'react'\n\nimport { list } from 'constants/CategoriesList'\nimport { amountOfJobs } from 'utils/JobCategory'\nimport JobCategory from './JobCategory'\n\nexport default function CategoriesList() {\n  return (\n    <div className=\"categories-list\">\n      {list.map((category) => (\n        <JobCategory\n          key={`job-category-${name}`}\n          amount={amountOfJobs(category.name)}\n          icon={category.icon}\n          name={category.name}\n        />\n      ))}\n    </div>\n  )\n}\n","import React, { memo } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { iconByCategory } from 'utils/JobCategory'\nimport { APP_URL_JOB_DETAIL } from 'constants/Url'\n\nfunction JobCard({ job }) {\n  const {\n    category,\n    consultant,\n    contract,\n    experience,\n    id,\n    kindPosition,\n    location,\n    mode,\n    name,\n  } = job\n\n  return (\n    <Link\n      to={`${APP_URL_JOB_DETAIL}?id=${id}`}\n      className=\"job-card\"\n    >\n      <div className=\"job-card__logo\">{iconByCategory(category)}</div>\n      <div className=\"job-card__info\">\n        <span className=\"job-card__kind-position\">{kindPosition}</span>\n        <span className=\"job-card__name\">{name}</span>\n        <div className=\"job-card__general-info\">\n          <div className=\"job-card__info-container\">\n            <FontAwesomeIcon icon=\"map-marker-alt\" />\n            &nbsp;\n            <span className=\"job-card__info-text\">{location}</span>\n          </div>\n          <div className=\"job-card__info-container\">\n            <FontAwesomeIcon icon=\"bars\" />\n            &nbsp;\n            <span className=\"job-card__info-text\">{mode}</span>\n          </div>\n          <div className=\"job-card__info-container\">\n            <FontAwesomeIcon icon=\"bars\" />\n            &nbsp;\n            <span className=\"job-card__info-text\">{experience}</span>\n          </div>\n          <div className=\"job-card__info-container\">\n            <FontAwesomeIcon icon=\"bars\" />\n            &nbsp;\n            <span className=\"job-card__info-text\">{contract}</span>\n          </div>\n          <div className=\"job-card__info-container\">\n            <FontAwesomeIcon icon=\"bars\" />\n            &nbsp;\n            <span className=\"job-card__info-text\">{consultant}</span>\n          </div>\n        </div>\n      </div>\n    </Link>\n  )\n}\n\nJobCard.propTypes = {\n  job: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n    consultant: PropTypes.string.isRequired,\n    contract: PropTypes.string.isRequired,\n    experience: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    kindPosition: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    mode: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default memo(JobCard)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { APP_URL_JOBS } from 'constants/Url'\nimport JobCard from './JobCard'\n\nfunction JobList({ jobs, title, withViewAll }) {\n  return (\n    <div className=\"job-list\">\n      <h4 className=\"job-list__title\">{title}</h4>\n      {jobs.length === 0 && (\n        <span className=\"job-list__title\">No se encontraron resultados</span>\n      )}\n      {jobs.map((job) => (\n        <JobCard\n          key={`job-card-${job.title}`}\n          job={job}\n        />\n      ))}\n      {\n        withViewAll && (\n          <Link\n            to={APP_URL_JOBS}\n            className=\"job-list__view-all-link\"\n          >\n            <div className=\"job-list__view-all-container\">\n              <span className=\"job-list__view-all-text\">Ver más búsquedas</span>\n              &nbsp;\n              <FontAwesomeIcon icon=\"arrow-right\" />\n            </div>\n          </Link>\n        )\n      }\n    </div>\n  )\n}\n\nJobList.propTypes = {\n  jobs: PropTypes.array.isRequired,\n  title: PropTypes.string,\n  withViewAll: PropTypes.bool,\n}\n\nJobList.defaultProps = {\n  title: '',\n  withViewAll: false,\n}\n\nexport default memo(JobList)\n","import React from 'react'\n\nimport JOBS from 'constants/Jobs'\nimport CategoriesList from 'components/JobCategory/CategoriesList'\nimport JobList from 'components/Job/JobList'\n\nconst featuredJobs = JOBS.filter((job) => job.featured)\n\nexport default function Searches() {\n  return (\n    <>\n      <div className=\"searches\">\n        <div className=\"searches__wrapper\">\n          <h4 className=\"searches__title\">Busquedas IT</h4>\n        </div>\n      </div>\n      <div className=\"landing__wrapper\">\n        <CategoriesList />\n        <JobList\n          withViewAll\n          jobs={featuredJobs}\n          title=\"Búsquedas destacadas\"\n        />\n      </div>\n    </>\n  )\n}\n","import Landing from './Landing'\n\nexport default Landing\n","import React from 'react'\n\nimport MainSlider from './MainSlider'\nimport AboutMe from './AboutMe'\nimport Advice from './Advice'\nimport Searches from './Searches'\n\nexport default function Landing() {\n  return (\n    <div className=\"landing\">\n      <MainSlider />\n      <AboutMe />\n      <Advice />\n      <Searches />\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/logo.b4e221ae.jpg\";","import Logo from './Logo'\n\nexport default Logo\n","import React from 'react'\n\nimport LOGO from 'assets/images/logo.jpg'\n\nexport default function Logo() {\n  return (\n    <img src={LOGO} alt=\"Logo Iocco Martina\" />\n  )\n}\n","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default function MobileNav() {\n  const [showMenu, setShowMenu] = useState(false)\n\n  return (\n    <div className=\"only-mobile\">\n      {!showMenu && (\n        <button\n          type=\"button\"\n          className=\"btn header__mobile-menu\"\n          onClick={() => setShowMenu(true)}\n        >\n          <FontAwesomeIcon icon=\"bars\" />\n        </button>\n      )}\n\n      {showMenu && (\n        <button\n          type=\"button\"\n          className=\"btn header__mobile-menu\"\n          onClick={() => setShowMenu(false)}\n        >\n          <FontAwesomeIcon icon=\"times\" />\n        </button>\n      )}\n    </div>\n  )\n}\n","import Header from './Header'\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport * as ROUTES from 'constants/Url'\nimport Logo from 'components/Logo'\nimport MobileNav from './MobileNav'\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <div className=\"header__wrapper\">\n        <MobileNav />\n        <Link\n          to={ROUTES.APP_URL_HOME}\n          className=\"header__logo\"\n        >\n          <Logo />\n        </Link>\n        <div className=\"header__menu\">\n          <Link to={ROUTES.APP_URL_HOME} className=\"header__menu-link\">Home</Link>\n          <a href={`${ROUTES.APP_URL_HOME}#section-sobre-mi`} className=\"header__menu-link\">Sobre mi</a>\n          <a href={`${ROUTES.APP_URL_HOME}#section-asesoramiento`} className=\"header__menu-link\">Asesoramientos</a>\n          <Link to={ROUTES.APP_URL_JOBS} className=\"header__menu-link\">Búsquedas IT</Link>\n        </div>\n        <div className=\"header__balance only-mobile\" />\n      </div>\n    </div>\n  )\n}\n","export const EMAIL = 'ioccomartina@gmail.com'\nexport const RECRUITER_EMAIL = 'seleccionesim@gmail.com'\n","import Footer from './Footer'\n\nexport default Footer\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Link } from 'react-router-dom'\n\nimport * as CONTACT from 'constants/Contact'\nimport * as SOCIAL from 'constants/SocialNetwork'\nimport { list as CATEGORIES } from 'constants/CategoriesList'\nimport { APP_URL_JOBS } from 'constants/Url'\nimport Logo from 'components/Logo'\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer__wrapper\">\n        <div className=\"footer__resume\">\n          <div className=\"footer__resume-contact\">\n            <div className=\"footer__logo\">\n              <Logo />\n            </div>\n          </div>\n          <div className=\"footer__resume-jobs\">\n            <span className=\"footer__resume-title\">Contacto</span>\n            <a\n              href={`mailto:${CONTACT.RECRUITER_EMAIL}`}\n              className=\"footer__resume-link footer__info\"\n            >\n              <b>Búsquedas:</b>\n              &nbsp;\n              {CONTACT.RECRUITER_EMAIL}\n            </a>\n            <a\n              href={`mailto:${CONTACT.EMAIL}`}\n              className=\"footer__resume-link footer__info\"\n            >\n              <b>Asesoramiento:</b>\n              &nbsp;\n              {CONTACT.EMAIL}\n            </a>\n          </div>\n          <div className=\"footer__resume-jobs\">\n            <span className=\"footer__resume-title\">Búsquedas</span>\n            {CATEGORIES.map((category) => (\n              <Link\n                key={`footer-search-job-${category.name}`}\n                to={`${APP_URL_JOBS}?categoria=${category.name}`}\n                className=\"footer__resume-link\"\n              >\n                {category.name}\n              </Link>\n            ))}\n          </div>\n        </div>\n        <a\n          className=\"footer__social-link\"\n          href={SOCIAL.LINKEDIN}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <FontAwesomeIcon icon={['fab', 'linkedin-in']} />\n        </a>\n      </div>\n    </div>\n  )\n}\n","export const LINKEDIN = 'https://linkedin.com/in/martinaiocco'\n","export function parseQueryParams(params) {\n  return new URLSearchParams(params)\n}\n\nexport function getParam(params, name) {\n  return params.get(name)\n}\n","import Searches from './Searches'\n\nexport default Searches\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport { parseQueryParams, getParam } from 'utils/QueryParams'\nimport JOBS from 'constants/Jobs'\nimport CategoriesList from 'components/JobCategory/CategoriesList'\nimport JobList from 'components/Job/JobList'\n\nexport default function Searches() {\n  const params = parseQueryParams(useLocation().search)\n  const category = getParam(params, 'categoria')\n  const filteredJobs = category\n    ? JOBS.filter((job) => job.category.toLowerCase() === category.toLowerCase())\n    : JOBS\n\n  return (\n    <>\n      <div className=\"searches\">\n        <div className=\"searches__wrapper\">\n          <h4 className=\"searches__title\">Búsquedas IT</h4>\n        </div>\n      </div>\n      <div className=\"landing__wrapper\">\n        <CategoriesList />\n        <JobList\n          jobs={filteredJobs}\n          withViewAll={false}\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport { iconByCategory } from 'utils/JobCategory'\nimport { parseQueryParams, getParam } from 'utils/QueryParams'\nimport JOBS from 'constants/Jobs'\nimport { RECRUITER_EMAIL } from 'constants/Contact'\n\nfunction JobDetail() {\n  const params = parseQueryParams(useLocation().search)\n  const id = getParam(params, 'id')\n  const job = JOBS.find((job) => job.id === id)\n\n  return (\n    <>\n      <div className=\"job-detail\">\n        <div className=\"job-detail__wrapper\">\n          <h4 className=\"job-detail__title\">{job.name}</h4>\n          <h6 className=\"job-detail__reference\">{`Referencia: #${id}`}</h6>\n        </div>\n      </div>\n      <div className=\"landing__wrapper\">\n        <div className=\"job-detail__container\">\n          <div className=\"job-detail__description\">\n            <div className=\"job-detail__subtitle\">Descripción</div>\n            <p className=\"job-detail__text\">{job.description}</p>\n            {job.exclusive_requirements && (\n              <>\n                <div className=\"job-detail__subtitle\">Requisitos excluyentes</div>\n                <ul className=\"job-detail__items\">\n                  {job.exclusive_requirements.map((req) => (\n                    <li key={`job-detail-exclusive-${req}`}>\n                      {req}\n                    </li>\n                  ))}\n                </ul>\n              </>\n            )}\n            {job.desirable_requirements && (\n              <>\n                <div className=\"job-detail__subtitle\">Requisitos deseables</div>\n                <ul className=\"job-detail__items\">\n                  {job.desirable_requirements.map((req) => (\n                    <li key={`job-detail-desirable-${req}`}>\n                      {req}\n                    </li>\n                  ))}\n                </ul>\n              </>\n            )}\n            {job.benefits && (\n              <>\n                <div className=\"job-detail__subtitle\">Beneficios</div>\n                <ul className=\"job-detail__items\">\n                  {job.benefits.map((benefit) => (\n                    <li key={`job-detail-benefits-${benefit}`}>\n                      {benefit}\n                    </li>\n                  ))}\n                </ul>\n              </>\n            )}\n          </div>\n          <div className=\"job-detail__overview\">\n            <div className=\"job-detail__icon\">\n              {iconByCategory(job.category)}\n            </div>\n            <div className=\"job-detail__additional-info\">\n              <span className=\"job-detail__info-name\">Consultora:</span>\n              <span className=\"job-detail__info-value\">{job.consultant}</span>\n            </div>\n            <div className=\"job-detail__additional-info\">\n              <span className=\"job-detail__info-name\">Posición:</span>\n              <span className=\"job-detail__info-value\">{job.category}</span>\n            </div>\n            <div className=\"job-detail__additional-info\">\n              <span className=\"job-detail__info-name\">Experiencia:</span>\n              <span className=\"job-detail__info-value\">{job.experience}</span>\n            </div>\n            <div className=\"job-detail__additional-info\">\n              <span className=\"job-detail__info-name\">Tipo de posición:</span>\n              <span className=\"job-detail__info-value\">{job.kindPosition}</span>\n            </div>\n            <div className=\"job-detail__additional-info\">\n              <span className=\"job-detail__info-name\">Ubicación:</span>\n              <span className=\"job-detail__info-value\">{job.location}</span>\n            </div>\n            <div className=\"job-detail__additional-info\">\n              <span className=\"job-detail__info-name\">Modalidad:</span>\n              <span className=\"job-detail__info-value\">{job.mode}</span>\n            </div>\n            <div className=\"job-detail__additional-info\">\n              <span className=\"job-detail__info-name\">Contratación:</span>\n              <span className=\"job-detail__info-value\">{job.contract}</span>\n            </div>\n            <div>\n              <div className=\"job-detail__subtitle\">Aplicar</div>\n              <a\n                href={`mailto:${RECRUITER_EMAIL}`}\n                className=\"footer__info\"\n              >\n                <span className=\"job-detail__info-name\">Email:</span>\n                <span className=\"job-detail__info-value job-detail__info-value--primary\">\n                  {RECRUITER_EMAIL}\n                </span>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default JobDetail\n","import { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nfunction ScrollToTop({ history }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0)\n    })\n    return () => {\n      unlisten()\n    }\n  }, [])\n\n  return (null)\n}\n\nexport default withRouter(ScrollToTop)\n","import Main from './Main'\n\nexport default Main\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport * as ROUTES from 'constants/Url'\nimport Landing from 'components/Landing'\nimport Header from 'components/Header'\nimport Footer from 'components/Footer'\nimport Searches from 'components/Searches'\nimport JobDetail from 'components/Job/JobDetail'\nimport ScrollToTop from './ScrollToTop'\n\nexport default function Main() {\n  return (\n    <div className=\"main\">\n      <ScrollToTop />\n      <Header />\n      <Switch>\n        <Route path={ROUTES.APP_URL_JOBS}>\n          <Searches />\n        </Route>\n        <Route path={ROUTES.APP_URL_JOB_DETAIL}>\n          <JobDetail />\n        </Route>\n        <Route path={ROUTES.APP_URL_HOME}>\n          <Landing />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport initFontAwesome from 'utils/InitFontAwesome'\nimport * as ROUTES from 'constants/Url'\nimport Main from 'components/Main'\n\ninitFontAwesome()\n\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <Switch>\n        <Route path={ROUTES.APP_URL_HOME}>\n          <Main />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from 'styled-components'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport './stylesheets/application.scss'\n\nconst StApp = styled(App)`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <StApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}